% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decorate.R, R/ggtext.R
\name{decorate_text}
\alias{decorate_text}
\alias{decorate_label}
\alias{decorate_bannertext}
\alias{decorate_rect}
\alias{decorate_polygon}
\alias{decorate_point}
\alias{decorate_line}
\alias{decorate_path}
\alias{decorate_segment}
\alias{decorate_hline}
\alias{decorate_vline}
\alias{decorate_richtext}
\title{Annotate Plot}
\usage{
decorate_text(
  plot,
  label,
  x = mid_x,
  y = mid_y,
  CellID = NULL,
  auto_adjust = TRUE,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_label(
  plot,
  label,
  x = mid_x,
  y = mid_y,
  CellID = NULL,
  auto_adjust = TRUE,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_bannertext(
  plot,
  label,
  x = mid_x,
  y = mid_y,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_rect(
  plot,
  xmin = x.range[1],
  ymin = y.range[1],
  xmax = x.range[2],
  ymax = y.range[2],
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_polygon(
  plot,
  x = NULL,
  y = NULL,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_point(
  plot,
  x = mid_x,
  y = mid_y,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_line(
  plot,
  x = x.range,
  y = y.range,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_path(
  plot,
  x = x.range,
  y = y.range,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_segment(
  plot,
  x = x.range[1],
  y = y.range[2],
  xend = x.range[2],
  yend = x.range[2],
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_hline(
  plot,
  yintercept = mid_y,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_vline(
  plot,
  xintercept = mid_x,
  CellID = NULL,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)

decorate_richtext(
  plot,
  label,
  x = mid_x,
  y = mid_y,
  CellID = NULL,
  auto_adjust = TRUE,
  fixed = TRUE,
  ignore.case = FALSE,
  ...
)
}
\arguments{
\item{plot}{an ArcPlot object.}

\item{label}{expression or character.}

\item{x, xend, xmin, xmax, xintercept}{numeric vector (in degree) specifying x-values.}

\item{y, yend, ymin, ymax, yintercept}{positive numeric vector (in radius) specifying y-values.}

\item{CellID}{character IDs indicating which element will be modified.}

\item{auto_adjust}{logical, if TRUE will adjust angle based on x-axis value.}

\item{fixed}{logical.  If \code{TRUE}, \code{pattern} is a string to be
    matched as is.  Overrides all conflicting arguments.}

\item{ignore.case}{if \code{FALSE}, the pattern matching is \emph{case
      sensitive} and if \code{TRUE}, case is ignored during matching.}

\item{...}{other parameters passing `Arc*Grob()` function.}
}
\value{
a modified ArcPlot object.
}
\description{
Useful functions to add annotate based on polar coordinate.
}
\author{
Hou Yun
}
